// Generated by Dagger (https://google.github.io/dagger).
package com.ctech.messenger.di;

import com.ctech.messenger.utils.ThreadScheduler;
import dagger.internal.Factory;
import dagger.internal.Preconditions;

public final class OnboardingModule_ProvideThreadSchedulerFactory
    implements Factory<ThreadScheduler> {
  private final OnboardingModule module;

  public OnboardingModule_ProvideThreadSchedulerFactory(OnboardingModule module) {
    this.module = module;
  }

  @Override
  public ThreadScheduler get() {
    return provideInstance(module);
  }

  public static ThreadScheduler provideInstance(OnboardingModule module) {
    return proxyProvideThreadScheduler(module);
  }

  public static OnboardingModule_ProvideThreadSchedulerFactory create(OnboardingModule module) {
    return new OnboardingModule_ProvideThreadSchedulerFactory(module);
  }

  public static ThreadScheduler proxyProvideThreadScheduler(OnboardingModule instance) {
    return Preconditions.checkNotNull(
        instance.provideThreadScheduler(),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
