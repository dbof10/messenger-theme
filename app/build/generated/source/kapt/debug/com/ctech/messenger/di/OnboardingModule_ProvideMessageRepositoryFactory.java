// Generated by Dagger (https://google.github.io/dagger).
package com.ctech.messenger.di;

import com.ctech.messenger.repository.MessageRepository;
import com.ctech.messenger.view.OnboardingActivity;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

public final class OnboardingModule_ProvideMessageRepositoryFactory
    implements Factory<MessageRepository> {
  private final OnboardingModule module;

  private final Provider<OnboardingActivity> activityProvider;

  public OnboardingModule_ProvideMessageRepositoryFactory(
      OnboardingModule module, Provider<OnboardingActivity> activityProvider) {
    this.module = module;
    this.activityProvider = activityProvider;
  }

  @Override
  public MessageRepository get() {
    return provideInstance(module, activityProvider);
  }

  public static MessageRepository provideInstance(
      OnboardingModule module, Provider<OnboardingActivity> activityProvider) {
    return proxyProvideMessageRepository(module, activityProvider.get());
  }

  public static OnboardingModule_ProvideMessageRepositoryFactory create(
      OnboardingModule module, Provider<OnboardingActivity> activityProvider) {
    return new OnboardingModule_ProvideMessageRepositoryFactory(module, activityProvider);
  }

  public static MessageRepository proxyProvideMessageRepository(
      OnboardingModule instance, OnboardingActivity activity) {
    return Preconditions.checkNotNull(
        instance.provideMessageRepository(activity),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
