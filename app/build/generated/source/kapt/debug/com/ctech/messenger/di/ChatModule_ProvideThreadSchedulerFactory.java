// Generated by Dagger (https://google.github.io/dagger).
package com.ctech.messenger.di;

import com.ctech.messenger.utils.ThreadScheduler;
import dagger.internal.Factory;
import dagger.internal.Preconditions;

public final class ChatModule_ProvideThreadSchedulerFactory implements Factory<ThreadScheduler> {
  private final ChatModule module;

  public ChatModule_ProvideThreadSchedulerFactory(ChatModule module) {
    this.module = module;
  }

  @Override
  public ThreadScheduler get() {
    return provideInstance(module);
  }

  public static ThreadScheduler provideInstance(ChatModule module) {
    return proxyProvideThreadScheduler(module);
  }

  public static ChatModule_ProvideThreadSchedulerFactory create(ChatModule module) {
    return new ChatModule_ProvideThreadSchedulerFactory(module);
  }

  public static ThreadScheduler proxyProvideThreadScheduler(ChatModule instance) {
    return Preconditions.checkNotNull(
        instance.provideThreadScheduler(),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
