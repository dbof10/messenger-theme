// Generated by Dagger (https://google.github.io/dagger).
package com.ctech.messenger.di;

import com.ctech.messenger.repository.MessageRepository;
import com.ctech.messenger.view.OnboardingActivity;
import com.ctech.messenger.view.OnboardingActivity_MembersInjector;
import com.ctech.messenger.viewmodel.ChatViewModel;
import dagger.internal.Preconditions;

public final class DaggerOnboardingComponent implements OnboardingComponent {
  private OnboardingModule onboardingModule;

  private OnboardingActivity seedInstance;

  private DaggerOnboardingComponent(Builder builder) {
    initialize(builder);
  }

  public static OnboardingComponent.Builder builder() {
    return new Builder();
  }

  private MessageRepository getMessageRepository() {
    return OnboardingModule_ProvideMessageRepositoryFactory.proxyProvideMessageRepository(
        onboardingModule, seedInstance);
  }

  private ChatViewModel getChatViewModel() {
    return new ChatViewModel(
        getMessageRepository(),
        OnboardingModule_ProvideThreadSchedulerFactory.proxyProvideThreadScheduler(
            onboardingModule));
  }

  @SuppressWarnings("unchecked")
  private void initialize(final Builder builder) {
    this.onboardingModule = builder.onboardingModule;
    this.seedInstance = builder.seedInstance;
  }

  @Override
  public void inject(OnboardingActivity arg0) {
    injectOnboardingActivity(arg0);
  }

  private OnboardingActivity injectOnboardingActivity(OnboardingActivity instance) {
    OnboardingActivity_MembersInjector.injectViewModel(instance, getChatViewModel());
    return instance;
  }

  private static final class Builder extends OnboardingComponent.Builder {
    private OnboardingModule onboardingModule;

    private OnboardingActivity seedInstance;

    @Override
    public OnboardingComponent build() {
      if (onboardingModule == null) {
        this.onboardingModule = new OnboardingModule();
      }
      if (seedInstance == null) {
        throw new IllegalStateException(
            OnboardingActivity.class.getCanonicalName() + " must be set");
      }
      return new DaggerOnboardingComponent(this);
    }

    @Override
    public void seedInstance(OnboardingActivity arg0) {
      this.seedInstance = Preconditions.checkNotNull(arg0);
    }
  }
}
