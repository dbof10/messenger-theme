// Generated by Dagger (https://google.github.io/dagger).
package com.ctech.messenger.di;

import androidx.appcompat.app.AppCompatActivity;
import com.ctech.messenger.view.ChatActivity;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

public final class ChatModule_ProvideAppcompatActivityFactory
    implements Factory<AppCompatActivity> {
  private final ChatModule module;

  private final Provider<ChatActivity> activityProvider;

  public ChatModule_ProvideAppcompatActivityFactory(
      ChatModule module, Provider<ChatActivity> activityProvider) {
    this.module = module;
    this.activityProvider = activityProvider;
  }

  @Override
  public AppCompatActivity get() {
    return provideInstance(module, activityProvider);
  }

  public static AppCompatActivity provideInstance(
      ChatModule module, Provider<ChatActivity> activityProvider) {
    return proxyProvideAppcompatActivity(module, activityProvider.get());
  }

  public static ChatModule_ProvideAppcompatActivityFactory create(
      ChatModule module, Provider<ChatActivity> activityProvider) {
    return new ChatModule_ProvideAppcompatActivityFactory(module, activityProvider);
  }

  public static AppCompatActivity proxyProvideAppcompatActivity(
      ChatModule instance, ChatActivity activity) {
    return Preconditions.checkNotNull(
        instance.provideAppcompatActivity(activity),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
