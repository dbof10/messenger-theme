apply plugin: 'checkstyle'
apply plugin: 'findbugs'
apply plugin: 'pmd'

// Add checkstyle, findbugs, pmd and lint to the check task.
check.dependsOn 'findbugs', 'pmd', 'lint'

task findbugs(type: FindBugs, dependsOn: "assembleDebug") {
    ignoreFailures = false
    effort = "max"
    reportLevel = "high"
    excludeFilter = new File("${project.rootDir}/gradleScript/quality/findbugs/findbugs-filter.xml")
    classes = files("${buildDir}/intermediates/classes")

    source 'src'
    include '**/*.java'
    exclude '**/gen/**'

    reports {
        xml.enabled = false
        html.enabled = true
        xml.setDestination(new File("$project.buildDir/reports/findbugs/findbugs.xml"))
        html.setDestination(new File("$project.buildDir/reports/findbugs/findbugs.html"))
    }

    classpath = files()
}

task pmd(type: Pmd) {
    ignoreFailures = false
    ruleSetFiles = files("${project.rootDir}/gradleScript/quality/pmd/pmd-ruleset.xml")
    ruleSets = []

    source 'src'
    include '**/*.java'
    exclude '**/gen/**'

    reports {
        xml.enabled = false
        html.enabled = true
        xml.setDestination(new File("$project.buildDir/reports/pmd/pmd.xml"))
        html.setDestination(new File("$project.buildDir/reports/pmd/pmd.html"))
    }
}

android {
    lintOptions {
        abortOnError false
        ignoreWarnings false
        xmlReport false
        htmlReport true
        lintConfig file("${project.rootDir}/gradleScript/quality/lint/lint.xml")
        htmlOutput file("$project.buildDir/reports/lint/lint-result.html")
        xmlOutput file("$project.buildDir/reports/lint/lint-result.xml")
    }
}
